'''Crie um programa que consulte a cota√ß√£o atual de uma moeda estrangeira em rela√ß√£o ao Real Brasileiro (BRL). O usu√°rio deve informar o c√≥digo da moeda desejada (ex: USD, EUR, GBP), e o programa deve exibir o valor atual, m√°ximo e m√≠nimo da cota√ß√£o, al√©m da data e hora da √∫ltima atualiza√ß√£o. Utilize a API da AwesomeAPI para obter os dados de cota√ß√£o.
** Instale o modulo requests - pip install requests **
URL da API com base na moeda informada
    url = f"https://economia.awesomeapi.com.br/json/last/{moeda}-BRL"'''

import requests

def consultar_cotacao(moeda):
    url = f"https://economia.awesomeapi.com.br/json/last/{moeda}-BRL"

    try:
        resposta = requests.get(url)
        resposta.raise_for_status()  # Lan√ßa exce√ß√£o se erro na resposta

        dados = resposta.json()
        chave = f"{moeda}BRL"

        if chave in dados:
            cotacao = dados[chave]
            print(f"\nüí± Cota√ß√£o {moeda} para BRL:")
            print(f"Valor Atual: R$ {cotacao['bid']}")
            print(f"Valor M√≠nimo: R$ {cotacao['low']}")
            print(f"Valor M√°ximo: R$ {cotacao['high']}")
            print(f"Data: {cotacao['create_date']}")
        else:
            print("‚ùå Moeda n√£o encontrada ou c√≥digo incorreto.")

    except requests.exceptions.RequestException as erro:
        print("Erro na requisi√ß√£o:", erro)

def main():
    print("=== Consulta de Cota√ß√£o ===")
    moeda = input("Digite o c√≥digo da moeda (ex: USD, EUR, GBP): ").strip().upper()

    if moeda.isalpha() and len(moeda) == 3:
        consultar_cotacao(moeda)
    else:
        print("‚ö†Ô∏è C√≥digo inv√°lido. Use apenas 3 letras (ex: USD, EUR).")

if __name__ == "__main__":
    main()